def rabin_karp(text, pat):
    n = len(text)
    m = len(pat)
    prime = 101
    d = 256
    
    h = 1
    for i in range(m - 1):
        h = (h * d) % prime
    
    pat_hash = 0
    text_hash = 0
    for i in range(m):
        pat_hash = (d * pat_hash + ord(pat[i])) % prime
        text_hash = (d * text_hash + ord(text[i])) % prime
    
    for i in range(n - m + 1):
        if pat_hash == text_hash:
            if text[i:i + m] == pat:
                return "YES"
        
        if i < n - m:
            text_hash = (d * (text_hash - ord(text[i]) * h) + ord(text[i + m])) % prime
            if text_hash < 0:
                text_hash += prime
    
    return "NO"

def main():
    T = int(input())
    for _ in range(T):
        text = input().strip()
        pat = input().strip()
        print(rabin_karp(text, pat))

if __name__ == "__main__":
    main()
